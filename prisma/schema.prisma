// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Size {
  SMALL
  MEDIUM
  LARGE
}

enum Gender {
  MALE
  FEMALE
}

enum SpecieType {
  CAT
  DOG
}

enum Role {
  USER
  MEMBER
  ADMIN
}

model Pet {
  id             String       @id @default(uuid())
  name           String
  created_at     DateTime     @default(now())
  about          String
  age            Int
  size           Size
  gender         Gender
  speciesType    SpecieType
  Organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  User           User?        @relation(fields: [userId], references: [id])
  userId         String?

  @@map("pets")
}

model Organization {
  id                String             @id @default(uuid())
  name              String
  email             String             @unique
  whatsapp          String
  cep               String
  state             String
  city              String
  neighborhood      String
  street            String
  latitude          Decimal
  longitude         Decimal
  created_at        DateTime           @default(now())
  pets              Pet[]
  User              User?              @relation(fields: [userId], references: [id])
  userId            String?
  PetOrganization   PetOrganization?   @relation(fields: [petOrganizationId], references: [id])
  petOrganizationId String?
  UserOrganization  UserOrganization[]

  @@map("organizations")
}

model UserOrganization {
  Organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  User           User         @relation(fields: [userId], references: [id])
  userId         String

  @@id([organizationId, userId])
}

model PetOrganization {
  id             String         @id @default(uuid())
  organization   Organization[]
  organizationId String

  @@map("petOrganizations")
}

model User {
  id               String             @id @default(uuid())
  name             String
  role             Role               @default(USER)
  email            String             @unique
  whatsapp         String
  password_hash    String
  created_at       DateTime           @default(now())
  organization     Organization[]
  pets             Pet[]
  UserOrganization UserOrganization[]

  @@map("users")
}
